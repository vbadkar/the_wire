<?php

/**
 * @file
 * The intercom module file.
 */

use Drupal\user\Entity\User;

/**
 * Implements hook_page_attachments().
 *
 * Insert JavaScript to the appropriate scope/region of the page.
 */
function intercom_page_attachments_alter(array &$page) {

  $config = \Drupal::config('intercom.settings');
  $mode = $config->get('intercom_mode');
  $an_only = $config->get('intercom_an_only');

  $app_id = $config->get('intercom_test_app_id');
  // Production mode.
  if ($mode === 1) {
    $app_id = $config->get('intercom_live_app_id');
  }
  // A key must be set.
  if (!isset($app_id)) {
    return;
  }

  $account = \Drupal::currentUser();
  if (!$account->isAnonymous() && $an_only == 1) {
    return;
  }

  $parameters = [
    'app_id' => $app_id,
  ];
  if (!$account->isAnonymous()) {
    /** @var \Drupal\user\Entity\User $account */
    $account = User::load($account->id());
    $account_parameters = intercom_user_parameters($account);
    $parameters = array_merge($parameters, $account_parameters);
  }

  // Attach the Library and the settings.
  $page['#attached']['library'][] = 'intercom/intercom';
  $page['#attached']['drupalSettings']['intercom'] = $parameters;
}

/**
 * Configure the default Intercom parameters from a logged in user account.
 *
 * @param \Drupal\user\Entity\User $account
 *   The user to gather the parameters from.
 *
 * @return array
 *   A parameters object that can be passed to intercom.
 */
function intercom_user_parameters(User $account) {
  $parameters = [];
  $parameters['email'] = $account->getEmail();
  $parameters['user_id'] = $account->id();
  $parameters['name'] = $account->getAccountName();

  // Call modules that implement the hook, and let them add items.
  \Drupal::moduleHandler()->alter('intercom_user_parameters', $parameters);
  return $parameters;
}

/**
 * Rename app_id configuration name.
 *
 * Rename configuration intercom_test_key and intercom_live_key to
 * intercom_test_app_id and intercom_live_app_id respectively.
 */
function intercom_update_8001() {
  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('intercom.settings');
  $config
    ->set('intercom_test_app_id', $config->get('intercom_test_key'))
    ->set('intercom_live_app_id', $config->get('intercom_live_key'))
    ->clear('intercom_test_key')
    ->clear('intercom_live_key')
    ->save(TRUE);
}
